% File: MMMmmmDiagram.mpinput rboxesinput TEXTEXPRE("%&latex" & char(10) & "\documentclass{report}\begin{document}");TEXPOST("\end{document}");numeric gap, arrowFactor, roundOut;pair arrowHorizStartCorrection, arrowHorizEndCorrection;pair arrowVertStartCorrection, arrowVertEndCorrection;pair leftGap, rightGap;pair netTop, netBottom;arrowFactor := 3;gap := 16;arrowHorizStartCorrection := (1 / 2, 0);arrowHorizEndCorrection := (1 / 1.1, 0);arrowVertStartCorrection := (0, - 1 / 2);arrowVertEndCorrection := (0, - 1 / 1.1);leftGap := (5, 0);rightGap := (7, 0);shadow := 1;defaultdx := 6;defaultdy := 10;vardef drawshadowed(text t) =  fixsize(t);  forsuffixes s=t:    fill bpath.s shifted (shadow,-shadow);    unfill bpath.s;    drawboxed(s);  endforenddef;vardef drawdashed(text t) =  fixsize(t);  pickup pencircle scaled 1.25;  forsuffixes s=t:    draw bpath.s dashed evenly;  endfor  pickup defaultpen;enddef;% Make the output recognizable as EPS and embed any needed fonts, for viewingprologues := 3;beginfig(-1);boxit.viewRender(btex View Renderer etex);boxit.connectionEdit(btex Connection Editor etex);boxit.portScan(btex Port Scanner etex);boxit.serviceScan(btex Service Scanner etex);boxit.application(btex etex);boxit.caption(btex m+m manager Utility application etex);ypart viewRender.n = ypart portScan.n;ypart connectionEdit.n = ypart serviceScan.n;xpart viewRender.w = xpart connectionEdit.w;xpart portScan.w = xpart serviceScan.w;viewRender.sw + (0, -3gap) = connectionEdit.nw;viewRender.ne + (5gap, 0) = portScan.nw;application.nw = viewRender.nw + (-gap, 2gap);application.se = serviceScan.se + (gap, -1.5gap);connectionEdit.e - connectionEdit.w = viewRender.e - viewRender.w;connectionEdit.e - connectionEdit.w = portScan.e - portScan.w;connectionEdit.e - connectionEdit.w = serviceScan.e - serviceScan.w;drawshadowed(connectionEdit, viewRender, portScan, serviceScan);drawdashed(application);xpart caption.c = xpart application.c;ypart caption.n = ypart application.n;drawunboxed(caption); netTop = application.ne + (2gap, 2.5gap);netBottom = application.se + (2gap, -4.5gap);pickup defaultpen;ahlength := 6;ahangle := 60;linejoin := mitered;liecap := butt;		pickup pencircle scaled (arrowFactor / 2);drawarrow portScan.w - arrowHorizStartCorrection --				viewRender.e + (arrowHorizEndCorrection * arrowFactor / 2) withcolor blue;drawarrow serviceScan.w - arrowHorizStartCorrection --				((xpart viewRender.e + xpart portScan.w) / 2, ypart serviceScan.w) --				((xpart viewRender.e + xpart portScan.w) / 2, ypart viewRender.e) --				viewRender.e + (arrowHorizEndCorrection * arrowFactor / 2) withcolor blue;drawarrow connectionEdit.n - arrowVertStartCorrection --				viewRender.s + (arrowVertEndCorrection * arrowFactor / 2) withcolor blue;pickup pencircle scaled arrowFactor;drawdblarrow netBottom -- netTop;pickup defaultpen;pair thickLineTweak;thickLineTweak := (arrowFactor * arrowHorizEndCorrection) - (arrowFactor / 3, 0);drawarrow (xpart netTop, ypart portScan.e) - arrowHorizStartCorrection --				portScan.e + arrowHorizEndCorrection;drawdblarrow (xpart netTop, ypart serviceScan.e) - thickLineTweak --				serviceScan.e + arrowHorizEndCorrection;drawarrow connectionEdit.s + arrowVertStartCorrection --				(xpart connectionEdit.s, ypart application.s) + (0, -2gap) --				(xpart netBottom, ypart application.s) + (0, -2gap) - thickLineTweak;label(btex YARP network etex scaled 1.25 rotated 90, (xpart netBottom + 0.75gap,			ypart serviceScan.e));endfig;end