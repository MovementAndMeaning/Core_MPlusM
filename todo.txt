[notation: ‘=‘ universal, ‘+’ service viewer / channel manager, ‘*’ M+M]

= use selected inclusion of ODEnableLogging/ODLogging, ODDisableLogging/ODLogging to bracket code that needs to be logged

+ when copying OGDF files into /usr/local/* from _release, use ‘cp -rp’ so that permissions will allow reading!
[_release/libOGDF.a goes to /usr/local/lib, ogdf/* goes to /usr/local/include]; note that the linker has some issues with OGDF

+ load/save positions, by entity name [optional???]

* change signal handling to use platform-neutral mechanisms

* document the architecture, philosophy and API of the non-viewer code

+ on dragging, do an adjustSize() without repaint?

+ if a connection is made outside of the viewer / manager, make sure that a repaint is triggered, not just for a new entity



Hi Dhruv,

Sure, tomorrow at 1pm at your office downtown.

My current assumption is that my web application will be accessible by the Rails default method of a JSON API. I will provide API keys and publish the available resources to your team, and then some kind of compliant "hook" (following your standard approach) in the mplusm middleware will be written. Obviously, we can discuss the details tomorrow, but I wanted to set out my current high-level assumption.

Michael Nixon
BSc (Computer Science), MSc (IAT), PhD candidate (IAT)
School of Interactive Arts and Technology | SFU
