{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 ArialMT;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww18280\viewh13200\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 [notation: \'91=\'91 universal, \'91+\'92 m+m manager, \'91*\'92 m+m, \'91@\'91 manual, \'91-\'91 m+m service]\
\
= use selected inclusion of ODEnableLogging/ODLogging, ODDisableLogging/ODLogging to bracket code that needs to be logged\
\
* change signal handling to use platform-neutral mechanisms\
\
+ on dragging, do an adjustSize() without repaint?\
\
+ if a connection is made outside of the viewer / manager, make sure that a repaint is triggered, not just for a new entity\
\
- (Python, Lua) services: embedding Python - https://docs.python.org/2/extending/embedding.html#embedding-python-in-c\
\
* integrate Arduino sensors via Linux-based Arduino boards? SmartTag via TouchShare?\
\
- Tunnel Service and Client need to be bidirectional (use nonblocking I/O?)\
\
* m+m input, output and filter services as Max objects - parameters of endpoint, port, tag and one input, one output or both, with wildcard protocols\
\
- check if the SpiderMonkey library can be statically linked on Windows and if this resolves the exit issue; if so, check if it can be statically linked on OS X\
\
= to determine whether a Windows executable is 32-bit or 64-bit, do \'93c:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\vc\\bin\\dumpbin.exe /headers the-program-file.exe\'94\
\
+ configuration file should have \'91enabled\'92, \'91name\'92, \'91arguments\'92, where \'91enabled\'92 is 0 if disabled, non-0 if enabled, \'91name\'92 is the executable name, et cetera - tab-separated\
\
+ \'91load\'92 a configuration brings up the configuration editor, with a \'91start\'92 button, \'91edit\'92 a configuration, \'91save\'92 a configuration\
\
+ regular input ports can\'92t be monitored; regular output ports and clients can use a \'91vampire\'92 channel to trigger a blinking monitor and services / adapters can monitor all their channels, reporting via a new response that a change has occurred - this should be sent by m+m manager, so that non-monitored services are not impacted\
\
+ only output channels can have displays attached\
\
@ to generate the correct dimensions for images in the m+m manager manual, set SETTINGS_FOR_MANUAL in ContentPanel.h to TRUE before running m+m manager - this locks the window size and prevents dragging of entities\
\
- for configurations, we need to know if the service / adapter is running on the same system as m+m manager, so that it is possible to relaunch it later or if the service / adapter is \'91system-independent\'92 so that it can be launched anywhere; input and output services will usually be \'91system-dependent\'92, as they connect to physical devices - however, filters are not usually \'91system-dependent\'92; note that some regular services, like the movement database service, _might_ be \'91system-dependent\'92, depending on how they access their resources\
\
- note that the \'91system-independent\'92 attribute must be provided by every service and adapter - probably as part of the application information - while the \'91running on same system as m+m manager\'92 is a run-time quality, so best captured when the arguments are retrieved from the service / adapter\
\
- note that only services and adapters can be recorded in a configuration: YARP endpoints and m+m clients can\'92t be launched from m+m manager, except for monitor ports or internally-provided input ports - if these are implemented - and all connections to the services and adapters must be recorded\
\
= files that are (mostly) edited on Windows need to be processed by \'91dos2unix\'92 and, possibly, checked for overlong lines using \'93CheckLength 100 .\'94\
\
- if some of the optional arguments to a service are supplied - required must have already been satisfied - then launching the service should do a validate / configure, setting the \'91configured\'92 flag, so that the \'91b\'92 command doesn\'92t ask for the arguments again; the \'91-g\'92 option only needs to be used if the default arguments are fine\
\
- every service has a hidden \'91pong\'92 UDP port that sends activity message to managers; frequency of update is a global constant - use Absorber service as a prototype - flags for each input and output port, so all m+m channels can be reported, not just output ports; maybe some form of compressed encodings\
\
@ create Simple Sine script in CL and JS, C++ Simple Sine input service, videos on how to build \'97 Shejidan / m+m movies\
\
* investigate YARP namespaces for future use with multiple networks\
}